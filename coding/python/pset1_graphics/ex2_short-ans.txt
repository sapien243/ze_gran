
(1)
    class Address:
        # Constructor method
        def __init__(self, number, street_name) -> None:
            self.number = number
            self.street_name = street_name


(2.a)
    5:30

(2.b)
    Yes.
    This is because print_time() prints out the time attribute of the class Clock
    and not the local variable time in the method.


(3.a)
    10:30

(3.b)
    It can be done.
    To call the variable, use the variable name, and to call the object attribute,
    use self.attribute_name.


(4.a)
    10:30

(4.b)
    nairobi_clock and cairo_clock are different variables referencing the same object.
    This is because cairo_clock=nairobi_clock passes nairobi_clock to cairo_clock by reference and not by value.
    Since the object is changed by cairo_clock.time='10:30',
    nairobi_clock.print_time() prints 10:30.
